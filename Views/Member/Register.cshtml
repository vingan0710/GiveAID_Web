@{
	Layout = null;
	string error = TempData["ErrorRegister"]?.ToString() ?? "";
}
<!doctype html>
<html lang="en">
	
<head>
	<title>Login 10</title>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

	<link href="https://fonts.googleapis.com/css?family=Lato:300,400,700&display=swap" rel="stylesheet">

	<link rel="stylesheet" href="~/css/mem_register.css">
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.1/css/all.min.css"
		  integrity="sha512-+4zCK9k+qNFUR5X+cKL9EIR+ZOhtIloNl9GIKS57V1MyNsYpYcUrUeQc9vNfzsWfV28IaLL3i96P9sdNyeRssA=="
		  crossorigin="anonymous" />
	<link rel="stylesheet" href="~/css/alert.css">
</head>

<body class="img js-fullheight" style="background-image: url(/img/cause4.jpg);">

	<div id="div_toast"></div>

	<section class="ftco-section">
		<div class="container">
			<div class="row justify-content-center">
				<div class="col-md-6 col-lg-4">
					<div class="login-wrap p-0">
						<h3 class="mb-4 text-center">Welcom</h3>
						<form action="/Member/CheckRegister" method="post" class="signin-form">
							<div class="form-group">
								<input name="mem_username" type="text" class="form-control" placeholder="Username" required>
							</div>
							<div class="form-group">
								<input name="mem_name" type="text" class="form-control" placeholder="Name" required>
							</div>
							<div class="form-group">
								<input name="email" type="email" class="form-control" placeholder="Email" pattern="[a-z0-9._%+-]+@@[a-z0-9.-]+\.[a-z]{2,}$" required>
							</div>
							<div class="form-group">
								<input name="phone_number" type="number" class="form-control" placeholder="Phone" required>
							</div>
							<div class="form-group">
								<input name="mem_password" id="password" type="password" class="form-control" placeholder="Password"
									   required>
							</div>
							<div class="form-group">
								<input id="re_password" type="password" class="form-control"
									   placeholder="Confirm Password" required>
							</div>
							<div class="form-group">
                                <button id="submit" type="submit" class="form-control btn btn-primary submit px-3">Sign Up</button>
							</div>
						</form>
						<p class="w-100 text-center">&mdash; Have an account? &mdash;</p>
						<div class="social d-flex text-center">
							<a href="/Member/Login" class="px-2 py-2 mr-md-1 rounded">
								<span class="ion-logo-facebook mr-2"></span>
								Sign In
							</a>
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>

	<script>
		var password = document.querySelector("#password");
		var re_password = document.querySelector("#re_password");
		var submit = document.querySelector("#submit");
		var a = "@error";

		submit.addEventListener("click", function (e) {
			if (password.value != re_password.value) {
				e.preventDefault();
				showErrorToast("Password And Confirm Password Does Not Match");
			}
		});

		function showSuccessToast() {
			toast({
				title: "Thành công!",
				message: "Bạn đã đăng ký thành công tài khoản tại F8.",
				type: "success",
				duration: 5000
			});
		}

		function showErrorToast(error) {
			toast(
			{
				title: "ERROR",
				message: error,
				type: "error",
				duration: 5000
			});
		}
		if (a != "") {
			showErrorToast(a);
		}

		function toast({ title = "", message = "", type = "info", duration = 3000 }) {
			const main = document.getElementById("div_toast");
			if (main) {
				const toast = document.createElement("div");

				// Auto remove toast
				const autoRemoveId = setTimeout(function () {
					main.removeChild(toast);
				}, duration + 1000);

				// Remove toast when clicked
				toast.onclick = function (e) {
					if (e.target.closest(".toast__close")) {
						main.removeChild(toast);
						clearTimeout(autoRemoveId);
					}
				};

				const icons = {
					success: "fas fa-check-circle",
					info: "fas fa-info-circle",
					warning: "fas fa-exclamation-circle",
					error: "fas fa-exclamation-circle"
				};
				const icon = icons[type];
				const delay = (duration / 1000).toFixed(2);

				toast.classList.add("toast", `toast--${type}`);
				toast.style.animation = `slideInLeft ease .3s, fadeOut linear 1s ${delay}s forwards`;

				toast.innerHTML = `
							  <div class="toast__icon">
								  <i class="${icon}"></i>
							  </div>
							  <div class="toast__body">
								  <h3 class="toast__title">${title}</h3>
								  <p class="toast__msg">${message}</p>
							  </div>
							  <div class="toast__close">
								  <i class="fas fa-times"></i>
							  </div>
						  `;
				main.appendChild(toast);
			}
		}

	</script>
</body>

</html>